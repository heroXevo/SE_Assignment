//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SE_DatabaseModel", "RolePermissions", "Permissions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Common.Permission), "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Common.Role))]
[assembly: EdmRelationshipAttribute("SE_DatabaseModel", "FK_Users_Towns", "Town", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Common.Town), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Common.User), true)]
[assembly: EdmRelationshipAttribute("SE_DatabaseModel", "UserRoles", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Common.Role), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Common.User))]
[assembly: EdmRelationshipAttribute("SE_DatabaseModel", "FK_Products_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Common.User), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Common.Product), true)]

#endregion

namespace Common
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SE_DatabaseEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SE_DatabaseEntities object using the connection string found in the 'SE_DatabaseEntities' section of the application configuration file.
        /// </summary>
        public SE_DatabaseEntities() : base("name=SE_DatabaseEntities", "SE_DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SE_DatabaseEntities object.
        /// </summary>
        public SE_DatabaseEntities(string connectionString) : base(connectionString, "SE_DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SE_DatabaseEntities object.
        /// </summary>
        public SE_DatabaseEntities(EntityConnection connection) : base(connection, "SE_DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Permission> Permissions
        {
            get
            {
                if ((_Permissions == null))
                {
                    _Permissions = base.CreateObjectSet<Permission>("Permissions");
                }
                return _Permissions;
            }
        }
        private ObjectSet<Permission> _Permissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Town> Towns
        {
            get
            {
                if ((_Towns == null))
                {
                    _Towns = base.CreateObjectSet<Town>("Towns");
                }
                return _Towns;
            }
        }
        private ObjectSet<Town> _Towns;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Permissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPermissions(Permission permission)
        {
            base.AddObject("Permissions", permission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Towns EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTowns(Town town)
        {
            base.AddObject("Towns", town);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SE_DatabaseModel", Name="Permission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Permission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Permission object.
        /// </summary>
        /// <param name="permissionID">Initial value of the PermissionID property.</param>
        /// <param name="permissionName">Initial value of the PermissionName property.</param>
        /// <param name="permissionDescription">Initial value of the PermissionDescription property.</param>
        public static Permission CreatePermission(global::System.Int32 permissionID, global::System.String permissionName, global::System.String permissionDescription)
        {
            Permission permission = new Permission();
            permission.PermissionID = permissionID;
            permission.PermissionName = permissionName;
            permission.PermissionDescription = permissionDescription;
            return permission;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PermissionID
        {
            get
            {
                return _PermissionID;
            }
            set
            {
                if (_PermissionID != value)
                {
                    OnPermissionIDChanging(value);
                    ReportPropertyChanging("PermissionID");
                    _PermissionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PermissionID");
                    OnPermissionIDChanged();
                }
            }
        }
        private global::System.Int32 _PermissionID;
        partial void OnPermissionIDChanging(global::System.Int32 value);
        partial void OnPermissionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PermissionName
        {
            get
            {
                return _PermissionName;
            }
            set
            {
                OnPermissionNameChanging(value);
                ReportPropertyChanging("PermissionName");
                _PermissionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PermissionName");
                OnPermissionNameChanged();
            }
        }
        private global::System.String _PermissionName;
        partial void OnPermissionNameChanging(global::System.String value);
        partial void OnPermissionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PermissionDescription
        {
            get
            {
                return _PermissionDescription;
            }
            set
            {
                OnPermissionDescriptionChanging(value);
                ReportPropertyChanging("PermissionDescription");
                _PermissionDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PermissionDescription");
                OnPermissionDescriptionChanged();
            }
        }
        private global::System.String _PermissionDescription;
        partial void OnPermissionDescriptionChanging(global::System.String value);
        partial void OnPermissionDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SE_DatabaseModel", "RolePermissions", "Roles")]
        public EntityCollection<Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("SE_DatabaseModel.RolePermissions", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("SE_DatabaseModel.RolePermissions", "Roles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SE_DatabaseModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="product_Name">Initial value of the Product_Name property.</param>
        /// <param name="c_Product_Description">Initial value of the C_Product_Description property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="image">Initial value of the Image property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        public static Product CreateProduct(global::System.Int32 productID, global::System.String product_Name, global::System.String c_Product_Description, global::System.Decimal price, global::System.String image, global::System.String userName)
        {
            Product product = new Product();
            product.ProductID = productID;
            product.Product_Name = product_Name;
            product.C_Product_Description = c_Product_Description;
            product.Price = price;
            product.Image = image;
            product.UserName = userName;
            return product;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Product_Name
        {
            get
            {
                return _Product_Name;
            }
            set
            {
                OnProduct_NameChanging(value);
                ReportPropertyChanging("Product_Name");
                _Product_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Product_Name");
                OnProduct_NameChanged();
            }
        }
        private global::System.String _Product_Name;
        partial void OnProduct_NameChanging(global::System.String value);
        partial void OnProduct_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String C_Product_Description
        {
            get
            {
                return _C_Product_Description;
            }
            set
            {
                OnC_Product_DescriptionChanging(value);
                ReportPropertyChanging("C_Product_Description");
                _C_Product_Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("C_Product_Description");
                OnC_Product_DescriptionChanged();
            }
        }
        private global::System.String _C_Product_Description;
        partial void OnC_Product_DescriptionChanging(global::System.String value);
        partial void OnC_Product_DescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Image
        {
            get
            {
                return _Image;
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.String _Image;
        partial void OnImageChanging(global::System.String value);
        partial void OnImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SE_DatabaseModel", "FK_Products_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SE_DatabaseModel.FK_Products_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SE_DatabaseModel.FK_Products_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SE_DatabaseModel.FK_Products_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("SE_DatabaseModel.FK_Products_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SE_DatabaseModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="role_Name">Initial value of the Role_Name property.</param>
        public static Role CreateRole(global::System.Int32 roleID, global::System.String role_Name)
        {
            Role role = new Role();
            role.RoleID = roleID;
            role.Role_Name = role_Name;
            return role;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Role_Name
        {
            get
            {
                return _Role_Name;
            }
            set
            {
                OnRole_NameChanging(value);
                ReportPropertyChanging("Role_Name");
                _Role_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Role_Name");
                OnRole_NameChanged();
            }
        }
        private global::System.String _Role_Name;
        partial void OnRole_NameChanging(global::System.String value);
        partial void OnRole_NameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SE_DatabaseModel", "RolePermissions", "Permissions")]
        public EntityCollection<Permission> Permissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Permission>("SE_DatabaseModel.RolePermissions", "Permissions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Permission>("SE_DatabaseModel.RolePermissions", "Permissions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SE_DatabaseModel", "UserRoles", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("SE_DatabaseModel.UserRoles", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("SE_DatabaseModel.UserRoles", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SE_DatabaseModel", Name="Town")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Town : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Town object.
        /// </summary>
        /// <param name="town_ID">Initial value of the Town_ID property.</param>
        /// <param name="town_Name">Initial value of the Town_Name property.</param>
        public static Town CreateTown(global::System.Int32 town_ID, global::System.String town_Name)
        {
            Town town = new Town();
            town.Town_ID = town_ID;
            town.Town_Name = town_Name;
            return town;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Town_ID
        {
            get
            {
                return _Town_ID;
            }
            set
            {
                if (_Town_ID != value)
                {
                    OnTown_IDChanging(value);
                    ReportPropertyChanging("Town_ID");
                    _Town_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Town_ID");
                    OnTown_IDChanged();
                }
            }
        }
        private global::System.Int32 _Town_ID;
        partial void OnTown_IDChanging(global::System.Int32 value);
        partial void OnTown_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Town_Name
        {
            get
            {
                return _Town_Name;
            }
            set
            {
                OnTown_NameChanging(value);
                ReportPropertyChanging("Town_Name");
                _Town_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Town_Name");
                OnTown_NameChanged();
            }
        }
        private global::System.String _Town_Name;
        partial void OnTown_NameChanging(global::System.String value);
        partial void OnTown_NameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SE_DatabaseModel", "FK_Users_Towns", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("SE_DatabaseModel.FK_Users_Towns", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("SE_DatabaseModel.FK_Users_Towns", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SE_DatabaseModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="surname">Initial value of the Surname property.</param>
        /// <param name="age">Initial value of the Age property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="townID">Initial value of the TownID property.</param>
        public static User CreateUser(global::System.String userName, global::System.String password, global::System.String name, global::System.String surname, global::System.Int32 age, global::System.String address, global::System.Int32 townID)
        {
            User user = new User();
            user.UserName = userName;
            user.Password = password;
            user.Name = name;
            user.Surname = surname;
            user.Age = age;
            user.Address = address;
            user.TownID = townID;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                if (_UserName != value)
                {
                    OnUserNameChanging(value);
                    ReportPropertyChanging("UserName");
                    _UserName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserName");
                    OnUserNameChanged();
                }
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Age
        {
            get
            {
                return _Age;
            }
            set
            {
                OnAgeChanging(value);
                ReportPropertyChanging("Age");
                _Age = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Age");
                OnAgeChanged();
            }
        }
        private global::System.Int32 _Age;
        partial void OnAgeChanging(global::System.Int32 value);
        partial void OnAgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TownID
        {
            get
            {
                return _TownID;
            }
            set
            {
                OnTownIDChanging(value);
                ReportPropertyChanging("TownID");
                _TownID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TownID");
                OnTownIDChanged();
            }
        }
        private global::System.Int32 _TownID;
        partial void OnTownIDChanging(global::System.Int32 value);
        partial void OnTownIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SE_DatabaseModel", "FK_Users_Towns", "Town")]
        public Town Town
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Town>("SE_DatabaseModel.FK_Users_Towns", "Town").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Town>("SE_DatabaseModel.FK_Users_Towns", "Town").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Town> TownReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Town>("SE_DatabaseModel.FK_Users_Towns", "Town");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Town>("SE_DatabaseModel.FK_Users_Towns", "Town", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SE_DatabaseModel", "UserRoles", "Role")]
        public EntityCollection<Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("SE_DatabaseModel.UserRoles", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("SE_DatabaseModel.UserRoles", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SE_DatabaseModel", "FK_Products_Users", "Product")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("SE_DatabaseModel.FK_Products_Users", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("SE_DatabaseModel.FK_Products_Users", "Product", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
